version: "3.8"
services:
  catalogdb:
    image: mongo

  basketdb:
    image: redis

  discountdb:
    image: postgres

  identitydb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: identitydb
    environment:
      SA_PASSWORD: "Password123!"
      ACCEPT_EULA: "Y"
    volumes:
      - identitydb_volume:/var/opt/mssql
    ports:
      - "1500:1433"

  orderdb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: orderdb
    environment:
      SA_PASSWORD: "Password123!"
      ACCEPT_EULA: "Y"
    volumes:
      - orderdb_volume:/var/opt/mssql
    ports:
      - "1435:1433"

  rabbitmq:
    image: rabbitmq:3.13.3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  catalog.api:
    image: catalog_api_image
    build:
      context: .
      dockerfile: Services/Catalog/FreeCourse.Services.Catalog.API/Dockerfile

  identityserver.api:
    image: identityserver_api_image
    build:
      context: .
      dockerfile: IdentityServer/FreeCourse.IdentityServer/Dockerfile
    container_name: identityserver.api
    restart: on-failure
    environment:
      ConnectionStrings__DefaultConnection: "Server=identitydb;Database=IdentityDb;User=sa;Password=Password123!;TrustServerCertificate=True"
    depends_on:
      - identitydb
    ports:
      - "5001:8080"

  basket.api:
    image: basket_api_image
    build:
      context: .
      dockerfile: Services/Basket/FreeCourse.Services.Basket.API/Dockerfile
    container_name: basket.api
    environment:
      RedisSettings__Port: 6379
      RedisSettings__Host: basketdb
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
    ports:
      - "5013:8080"
    depends_on:
      - basketdb

  photostock.api:
    image: photostock_api_image
    build:
      context: .
      dockerfile: Services/PhotoStock/FreeCourse.Services.PhotoStock.API/Dockerfile
    container_name: photostock.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
    ports:
      - "5012:8080"
    volumes:
      - type: bind
        source: C:\Users\sinan\OneDrive\Masaüstü\photos
        target: /app/wwwroot/photos

  discount.api:
    image: discount_api_image
    build:
      context: .
      dockerfile: Services/Discount/FreeCourse.Services.Discount.API/Dockerfile
    container_name: discount.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
      ConnectionStrings__PostgreSql": "User ID=admin; Password=Password123!; Server=localhost; Port=5433; Database=discountdb;"
    ports:
      - "5014:8080"

  fakepayment.api:
    image: fakepayment_api_image
    build:
      context: .
      dockerfile: Services/FakePayment/FreeCourse.Services.FakePayment.API/Dockerfile
    container_name: fakepayment.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
      RabbitMQUrl: rabbitmq
    ports:
      - "5016:8080"

  order.api:
    image: order_api_image
    build:
      context: .
      dockerfile: Services/Order/FreeCourse.Services.Order.API/Dockerfile
    container_name: order.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
      RabbitMQUrl: rabbitmq
      ConnectionStrings__DefaultConnection: "Server=orderdb;Database=OrderDb;User=sa;Password=Password123!;TrustServerCertificate=True"
    ports:
      - "5015:8080"

  gateway.api:
    image: gateway_api_image
    build:
      context: .
      dockerfile: Gateways/FreeCourse.Gateway/Dockerfile
    container_name: gateway.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityServerURL: http://identityserver.api
    ports:
      - "5000:8080"

volumes:
  catalogdb_volume:
  discountdb_volume:
  identitydb_volume:
  orderdb_volume:
